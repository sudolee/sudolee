1, 配置和插件
	- svn co http://sudolee.googlecode.com/svn/trunk/misc/sys-setting/vim_setting/
	- 下载完后: cd vim_setting; ./do_vim_setting.sh
		(将插件安装到~/.vim/, 更新配置文件~/.vimrc)
	- 更多插件见: http://www.vim.org/scripts/

2, Tlist
	- Tlist的快捷键在~/.vimrc里被设置为F3,F4
		F3: 打开/关闭Tlist
		F4: 在代码和Tlist之间跳转(实际上就是Ctrl+ww)
	- Note
		在Tlist里面搜索函数或者变量后, 直接回车就能定位到代码的相应位置处

3, apt-get install cscope

4, cscope生成搜索索引:
	a. 如果是kernel代码:
		cd kernel; make cscope ARCH=arm
	b. 如果是普通的工程代码, 下面以一个temp工程为例
		- 工程代码树
			sudolee@Ts:~/cache$ tree temp/
			temp/
			├── a.c
			├── b.c
			├── inc/
			│   └── 1.c
			└── src/
				└── 2.c
			2 directories, 4 files

		- 必须在工程的最上层目录生成索引
			-> cd temp; find . | grep -E -i '\.c$|\.h$|\.s$|\.cpp$|\.cxx$|\.cc$|\.java$|\.hh$|\.lds$' > cscope.files
			这一步把所有需要生成索引的文件路径写入cscope.files文件
			-> cscope -Rbqk
			这一步读取cscope.files文件, 并生成需要的索引: cscope.out
	c. Note
		- 默认执行cscope -Rbqk只能索引.c, .h文件, 所以必须事先生成cscope.files文件
		- ~/.vimrc里面添加了载入cscope数据的配置
	d. 打开文件时必须在最上层打开子文件夹里的文件, 否则索引数据不能加载
		e.g. 打开2.c时必须在temp里打开, cd到src/再打开就不能加载索引了
		- 正确: cd temp/; vim src/2.c;
		- 错误: cd temp/src/; vim 2.c;

5, cscope搜索 (在vim命令模式输入)
	- cs f g main (在整个工程里搜索main函数的定义, 完整的写法是: cscope find g main)
	- cs f s main (搜索main出现的地方)
	- cs f c main (搜索main被调用的地方)
	- cs f d main (搜索main所调用的函数)
	- Note
		搜索可能会产生多个结果, 比如我将光标移动到option_instat_callback函数处, 然后按下ctrl + \ + s快捷键, 结果如下:
		(也可以在vim命令行输入:cs f s option_instat_callback, 进行搜索)
		-> "#"列表示序号, 第1, 2, 3个搜索结果
		-> "filename"是出现在那个文件里
		-> "line"列表示在文件中的行号
		-> 如果搜索结果太多, 显示的结果跟less打开一个文件的操作相似, 按space键查看更多结果
		-> 光标会在"empty cancels"后面闪烁, 输入"1回车"进入第一个搜索结果

			/* option_instat_callback 搜索结果 */
			Cscope tag: option_instat_callback
			   #   line  filename / context / line
			   1     51  drivers/usb/serial/option.c <<GLOBAL>>
						 static void option_instat_callback(struct urb *urb);
			   2   1148  drivers/usb/serial/option.c <<GLOBAL>>
						 .read_int_callback = option_instat_callback,
			   3   1275  drivers/usb/serial/option.c <<option_instat_callback>>
						 static void option_instat_callback(struct urb *urb)
			Type number and <Enter> (empty cancels): 

6, cscope快捷键(+不用输入)
	- ctrl + \ + g 搜索符号的定义
	- ctrl + \ + s 搜索符号出现的位置
	- ctrl + \ + c 搜索该符号被调用的地方
	- ctrl + \ + d 搜索该函数所调用的函数
	- Note
		-> 以上快捷键的使用方法, 以ctrl + \ + g为例: 按住ctrl不放, 再按住\, 同时放开前面两者, 迅速按一下g
		-> 有时搜索的结果可能会因代码的格式原因有误差, 用ctrl + \ + s搜索所有出现的地方,然后逐个排查
		-> ctrl + ]和ctrl + \ + g功能相同(ctags也可使用ctrl + ])
		-> ctrl + o回退到(本次)跳转前的位置(ctags也可使用ctrl + o)
		-> 更多功能在vim命令模式输入"cs回车"查看
		-> 所有快捷键定义在: ~/.vim/plugin/cscope_macros.vim
